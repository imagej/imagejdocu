====== MidiJ v1.0 ======

===== Authors =====

**Oliver Buchheit** and **Thorsten Roth**, CRP Henri Tudor, Luxembourg

[[mailto:midij@tudor.lu]]

If you want to have information on new releases of this plugin, please send an email to midij@tudor.lu. We will then record your address in a mail database used only for this purpose (no spam !). If you want to contribute, either by a feedback (positive or negative, we take everything !), by being a beta-tester, or by developing, please contact us.

===== Description =====

MidiJ is a plugin for ImageJ allowing compatibility between ImageJ and any MIDI device. It has been developed by the Public Research Center Henri Tudor (http://www.tudor.lu), and is distributed under Apache 2.0 licence (http://www.apache.org/licenses/LICENSE-2.0.html).

MIDI is a communication protocol developed in Computer Assisted Music (CAM), allowing, among others, using lots of tangible and tactile devices for improved Human-Computer Interaction (HCI). If you are interested in developing simple to complex HCI solutions for ImageJ, MidiJ will be of great help. Check MIDI on the web : you will find a lot of information and resources on this very versatile protocol, such as MIDI libraries in several langages (C, C++, Python, Java...) or development platforms (Arduino, Pure Data, Max/MSP...), hardware components, Analog-to-Digital converters... You can even find software for motion capture outputting MIDI signals ; we did not make the test up to know, but you should now be able to drive ImageJ using motion capture, while at the same time use tangible MIDI devices such as foot pedal (ImageJ for on-line monitoring with real-time image analysis ?).


MidiJ allows to use ImageJ with any MIDI hardware device, or (touchscreen) application, for a significant improvement of HCI. That means, for example :

  * You can put on a tactile tablet your most used functions and macros in ImageJ, for a quick and permanent access - you will find several MIDI compliant iOS and Android applications;

  * During trial-and-error real-time analysis (such as setting the threshold of a function while constantly looking at the studied object on screen), you can drive the function threshold using a virtual fader, and in the same time zoom on the object using an other fader if you want, for fine tuning ; you always keep your eyes on the area of interest (no need to follow the mouse pointer to reach the different functions, nor look at your keyboard). 

  * Any user can make it's own HCI configuration, save it and retrieve it easily. 

  * ...


**Please feel free to contribute !**


Currently only MIDI In (from the MIDI device to ImageJ) is supported (other limitations are given in the &quot;MidiJ-User Doc&quot;, but they are few... at least we hope !). Future developments could make this plugin very powerful in ImageJ, thanks to the numerous and various properties of MIDI, to its current wide &quot;ecosystem&quot;, and to its current dynamics in CAM.

===== Wishlist =====

We will soon publish a Wish-list, and would be glad to have help in improving this plugin. Anybody interested in making this plugin alive and useful is warmly welcomed !!


===== Changelog =====

  * 1.0: initial version at the ImageJ User and Developer Conference 2012

===== Download =====

{{:plugin:utilities:midij_-_midi_plugin_for_imagej:midij.zip|}}   - tested on ImageJ v1.46r, Windows XP, Mac OSX 10.7.3 -&gt; 10.8.2
